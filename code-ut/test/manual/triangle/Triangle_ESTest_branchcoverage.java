/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 03 18:04:19 GMT 2018
 */

package manual.triangle;

import static org.junit.Assert.assertEquals;

import org.junit.Test;


//@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true)
public class Triangle_ESTest_branchcoverage /*extends Triangle_ESTest_scaffolding*/ {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(4408, 1, 1);
    assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(3, 1369, 3);
    assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(4226, 3, 4226);
    assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(2412, 2412, 1308);
    assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(3530, 2151, 4442);
    assertEquals(2, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(2, 3299, 1824);
    assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(3763, 1567, 2);
    assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(1, 342, 526);
    assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(300, 300, 2618);
    assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(1, 223, 223);
    assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(2618, 55, 0);
    assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(2829, (-1761), (-901));
    assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle(2151, 2151, 2151);
    assertEquals(3, int0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
    Triangle triangle0 = new Triangle();
    int int0 = triangle0.triangle((-724), 0, 705);
    assertEquals(0, int0);
  }
}
